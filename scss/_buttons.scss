.btn {
  display: inline-block;

  font-weight: $btn-font-weight;
  color: $body-color;
  text-align: center;
  text-decoration: none;
 
  vertical-align: middle;
  user-select: none;
  background-color: transparent;
  border: $btn-border-width solid transparent;
 
  @include transition;

  &:hover,
  &.hover {

  }
  &:focus,
  &.focus {
    outline: 0;
    // box-shadow: $btn-focus-box-shadow;
  }
  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    opacity:$btn-disabled-opacity ;
    // @include box-shadow(none);
  }
  &:not(:disabled):not(.disabled) {
    cursor: if($enable-pointer-cursor-for-buttons, pointer, null);
    &:active,
    &.active {
      background-color:#000 ;
      &:focus {        
      }
    }
  }
}

// Future-proof disabling of clicks on `<a>` elements
a.btn.disabled,
fieldset:disabled a.btn {
  pointer-events: none;
}


//
// Alternate buttons
//

@each $color, $value in $theme-colors {
  .btn-#{$color} {
    @include button-variant($value);
  }
}

// @each $color, $value in $theme-colors {
//   .btn-outline-#{$color} {
//     @include button-outline-variant($value);
//   }
// }


//
// Link buttons
//

// Make a button look and behave like a link
.btn-link {
  font-weight:bolder;
  color: $link-color;
  text-decoration: $link-decoration;
  @include transition;
  &:hover,
  &.hover {
    color: $link-hover-color;
  }


  &:focus,
  &.focus {
    text-decoration: $link-hover-decoration;
  }

  &:disabled,
  &.disabled {
    color: $btn-link-disabled-color;
    pointer-events: none;
  }

  // No need for an active state here
}


