

.btn {
  display: inline-block;
  font-size: $btn-font-size;
  font-weight: $btn-font-weight;
  color: $body-color;
  text-align: center;
  padding:0.6rem 2rem;
  border-radius: 5px;
  text-decoration: none; 
  vertical-align: middle;
  user-select: none;
  background-color: transparent;
  border: $btn-border-width solid transparent;
  @include transition;
  @include md{
    font-size: $font-size-base !important;
  }

  &:hover,
  &.hover {
    color: #fff;
    opacity: 0.9;
  }
  &:focus,
  &.focus {
    outline: 0;
  
  }
  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    opacity:$btn-disabled-opacity ;
  
  }
  &:not(:disabled):not(.disabled) {
    cursor: if($enable-pointer-cursor-for-buttons, pointer, null);
    &:active,
    &.active {
    
      &:focus {        
      }
    }
  }
}

.btn-sm{
  font-size: $btn-font-size-sm;
  padding:0.6rem 0.8rem;
}
// Future-proof disabling of clicks on `<a>` elements
a.btn.disabled,
fieldset:disabled a.btn {
  pointer-events: none;
}

.btn-secondary{
  &:hover{
  
    color: #fff;
  }
}
.tour-info__btn-block{
  display: flex;
  padding-bottom: $spacer;
  justify-content: center;
  @include lg{
    position: fixed;
    // width: 100%;
    bottom: 0;
    padding-bottom: 0;
    background-color: #fff;
    left: 0;
    right: 0;
  }
  .btn{
    @include lg{
    border-radius: 0;
    }
    // padding:0.4rem 0;
  }
  .btn + .btn{
    margin-left: $spacer-s;
    @include lg{
      margin-left: 0;
    }
  }
  @include lg{
    flex-wrap: wrap;
    .btn-outline-info{
      width: 100%;
      border: 0;
    }
    .btn-primary{
      width: 50%;
      padding: 0.8rem 0;
    }
    .btn-secondary{
      width: 50%;
      padding: 0.8rem 0;
    }
  }
}
.btn-under{
  font-size: $btn-font-size;
  padding:0.6rem;
 width: calc(100% + #{$spacer-s*2});
 border-radius: 0;
 margin:0 (-$spacer-s) (-$spacer-s);
}
.btn-full{
  width: 100%;
  border-radius: 0;
}
.btn-outline-info{
  @include border;
  cursor: none;
  pointer-events: none;

  background-color: $gray-100;
  color: $info;
  &:hover,
  &.hover {
    color: $info;
  }
}
//
// Alternate buttons
//

@each $color, $value in $theme-colors {
  .btn-#{$color} {
    @include button-variant($value);
  }
}




//
// Link buttons
//

// Make a button look and behave like a link
.btn-link {
  font-weight:bolder;
  color: $link-color;
  text-decoration: $link-decoration;
  @include transition;
  &:hover,
  &.hover {
    color: $link-hover-color;
  }


  &:focus,
  &.focus {
    outline: 0;
    // text-decoration: $link-hover-decoration;
  }
  &:active,
    &.active {
      outline: 0;
    }

  &:disabled,
  &.disabled {
    color: $btn-link-disabled-color;
    pointer-events: none;
  }

  // No need for an active state here
}


