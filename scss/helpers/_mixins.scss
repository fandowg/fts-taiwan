// @mixin border($color,$border-width){
//   border:$color $border-width solid;
// }
@mixin border{
  border:$gray-400 1px solid;
}

@mixin border-bottom{
  border-bottom:$gray-400 1px solid;
}



@mixin transition(){
  transition: all .35s;
}

@mixin linear-gradient{
  background: linear-gradient(to bottom,#fff ,#45a2ff 20%,#3399ff);
}

@mixin text-no{
  font: 0/0 a;
}

// @mixin media-breakpoint ($breakpoint){
//   @media(max-width:$breakpoint){
//     @content;
//   }
// }

// @each $key,$value in $grid-breakpoints{
//   @mixin media-breakpoint-do($value){
//     @include media-breakpoint($value)
//   }  
// }

@mixin xl {
  @media(max-width:map-get($grid-breakpoints,xl)){
    @content;
  }
}
@mixin lg {
  @media(max-width:map-get($grid-breakpoints,lg)){
    @content;
  }
}
@mixin md {
  @media(max-width:map-get($grid-breakpoints,md)){
    @content;
  }
}
@mixin sm {
  @media(max-width:map-get($grid-breakpoints,sm)){
    @content;
  }
}

@mixin xl-min {
  @media(min-width:map-get($grid-breakpoints,xl)){
    @content;
  }
}
@mixin lg-min {
  @media(min-width:map-get($grid-breakpoints,lg)){
    @content;
  }
}
@mixin md-min {
  @media(min-width:map-get($grid-breakpoints,md)){
    @content;
  }
}
@mixin sm-min {
  @media(min-width:map-get($grid-breakpoints,sm)){
    @content;
  }
}

@mixin button-variant($color){
  background-color: $color;
  color:$white;
  &:hover,
  &.hover {

  }
  &:focus,
  &.focus {
    outline: 0;
    // box-shadow: $btn-focus-box-shadow;
  }
  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    opacity:$btn-disabled-opacity ;
    // @include box-shadow(none);
  }
  &:not(:disabled):not(.disabled) {
    cursor: if($enable-pointer-cursor-for-buttons, pointer, null);
    &:active,
    &.active {
      // background-color:#000 ;
      &:focus {        
      }
    }
  }

}